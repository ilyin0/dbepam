--inserting info about league consisting match
INSERT INTO LEAGUES(LEAGUE_NAME, LEAGUE_YEAR)
SELECT distinct DT.League, DT.Championship
FROM DATA_TABLE DT;


--inserting info about coaches of two opposite teams
INSERT INTO COACHES(COACH_NAME)
SELECT distinct DT.Trainer_Team_1
FROM DATA_TABLE DT;

INSERT INTO COACHES(COACH_NAME)
SELECT distinct DT.Trainer_Team_2
FROM DATA_TABLE DT
minus (SELECT distinct DT.Trainer_Team_1 FROM DATA_TABLE DT);


--inserting info about player making event
INSERT INTO PLAYERS(PLAYER_NAME, PLAYER_ROLE)
SELECT DISTINCT DT.Player_Last_Name, DT.Position
FROM DATA_TABLE DT;


--inserting info about stadium which match is played in
INSERT INTO STADIUMS(STADIUM_NAME, STADIUM_CAPACITY, CITY_NAME)
SELECT DISTINCT DT.Venue, DT.Capacity, DT.Location
FROM DATA_TABLE DT
WHERE DT.Venue  NOT IN (SELECT S.STADIUM_NAME FROM STADIUMS S);


--inserting foreign key LEAGUE_ID into STAGES table
INSERT INTO STAGES(LEAGUE_ID)
SELECT DISTINCT L.ID
FROM DATA_TABLE DT
	LEFT JOIN LEAGUES L ON DT.League = L.LEAGUE_NAME;


--inserting info about matches
INSERT INTO MATCHES(MATCH_DATE, STADIUM_ID, STAGE_ID)
SELECT DISTINCT DTL.Date_Time, STAD.ID, STAG.ID
FROM STADIUMS STAD, STAGES STAG, (SELECT * FROM DATA_TABLE DT, LEAGUES L WHERE DT.League = L.LEAGUE_NAME) DTL
WHERE STAD.STADIUM_NAME = DTL.Venue
  AND STAG.STAGE_NUMBER = 0
  AND STAG.LEAGUE_ID = DTL.ID;



--inserting info tickets
INSERT INTO TICKETS_INFO(AVERAGE_PRICE, SOLD_AMOUNT, MATCH_ID)
SELECT DISTINCT DT.Avg_price, DT.tickets_sold, M.ID
FROM DATA_TABLE DT, MATCHES M, STADIUMS S
WHERE DT.Date_Time = M.MATCH_DATE
  AND S.STADIUM_NAME = DT.Venue
  AND S.ID = M.STADIUM_ID;


--inserting into TEAMS table
INSERT INTO TEAMS(TEAM_NAME, TEAM_FOUNDATION_YEAR)
SELECT DISTINCT DT.Team_1, DT.Founded_Team_1
FROM DATA_TABLE DT;

INSERT INTO TEAMS(TEAM_NAME, TEAM_FOUNDATION_YEAR)
SELECT DISTINCT DT.Team_2, DT.Founded_Team_2
FROM DATA_TABLE DT minus (SELECT DT.Team_1, DT.Founded_Team_1 FROM DATA_TABLE DT);



--inserting info about events
INSERT INTO EVENTS(EVENT_NAME, EVENT_MINUTE, PLAYER_ID, MATCH_ID)
SELECT DT.Event, DT.Event_Time, P.ID, M.ID
FROM DATA_TABLE DT, PLAYERS P, MATCHES M, TEAMS T
WHERE DT.Player_Last_Name = P.PLAYER_NAME 
  AND DT.Player_Team = T.TEAM_NAME
  AND DT.Date_Time = M.MATCH_DATE;


--inserting historical info about trainers
INSERT INTO COACHES_HISTORY(STAGE_ID, TEAM_ID, COACH_ID)
SELECT DISTINCT S.ID, T.ID, C.ID
FROM DATA_TABLE DT, STAGES S, COACHES C, TEAMS T, LEAGUES L, MATCHES M
WHERE DT.Trainer_Team_1 = C.COACH_NAME
  AND DT.Team_1 = T.TEAM_NAME
  AND DT.League = L.LEAGUE_NAME
  AND L.ID = S.LEAGUE_ID
  AND DT.Date_Time = M.MATCH_DATE
  AND M.STAGE_ID = S.ID;
  
INSERT INTO COACHES_HISTORY(STAGE_ID, TEAM_ID, COACH_ID)
SELECT DISTINCT S.ID, T.ID, C.ID
FROM DATA_TABLE DT, STAGES S, COACHES C, TEAMS T, LEAGUES L, MATCHES M
WHERE DT.Trainer_Team_2 = C.COACH_NAME
  AND DT.Team_2 = T.TEAM_NAME
  AND DT.League = L.LEAGUE_NAME
  AND L.ID = S.LEAGUE_ID
  AND DT.Date_Time = M.MATCH_DATE
  AND M.STAGE_ID = S.ID
  AND (
     S.ID  NOT IN (SELECT CH.STAGE_ID FROM COACHES_HISTORY CH)
     OR C.ID NOT IN (SELECT CH.COACH_ID FROM COACHES_HISTORY CH)
    );



--inserting historical info about players
INSERT INTO PLAYERS_HISTORY(PLAYER_ID, STAGE_ID, TEAM_ID)
SELECT DISTINCT P.ID, S.ID, T.ID
FROM DATA_TABLE DT, PLAYERS P, STAGES S, TEAMS T, LEAGUES L, MATCHES M
WHERE DT.Player_Team = T.TEAM_NAME
  AND DT.Player_Last_Name = P.PLAYER_NAME
  AND DT.League = L.LEAGUE_NAME
  AND L.ID = S.LEAGUE_ID
  AND DT.Date_Time = M.MATCH_DATE
  AND M.STAGE_ID = S.ID;


INSERT INTO TEAMS_IN_MATCHES(TEAM_ID, MATCH_ID, GOALS)
SELECT DISTINCT T1.ID, M.ID, 0
FROM DATA_TABLE DT, TEAMS T1, MATCHES M
WHERE DT.Team_1 = T1.TEAM_NAME
  AND DT.Date_Time = M.MATCH_DATE;

INSERT INTO TEAMS_IN_MATCHES(TEAM_ID, MATCH_ID, GOALS)
SELECT DISTINCT T2.ID, M.ID, 0
FROM DATA_TABLE DT, TEAMS T2, MATCHES M
WHERE DT.Team_2 = T2.TEAM_NAME
  AND DT.Date_Time = M.MATCH_DATE;


COMMIT;